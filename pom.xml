<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>se.repos</groupId>
	<artifactId>maven-parent</artifactId>
	<packaging>pom</packaging>
	<version>2.6</version>
	
	<name>Repos Java components</name>
	<url>http://www.repos.se/</url>
	
	<organization>
		<name>Repos Mjukvara AB</name>
	</organization>
	<inceptionYear>2004-2012</inceptionYear>

	<developers>
		<developer>
			<id>solsson</id>
			<name>Staffan Olsson</name>
			<email>staffan@repos.se</email>
		</developer>
	</developers>
	
	<repositories>
		<repository>
			<id>repos.open.repo</id>
			<name>Simonsoft / Repos Open Repository</name>
			<url>http://opensource.simonsoft.se/maven/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>repos.open.repo</id>
			<name>Simonsoft / Repos Open Repository</name>
			<url>s3://opensource.simonsoft.se/maven</url>
		</repository>
		<site>
			<id>repos.open.repo</id>
			<name>Simonsoft / Repos Open Repository Site</name>
			<url>s3://opensource.simonsoft.se/modules/${project.groupId}.${project.artifactId}</url>
		</site>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j-version>1.7.5</slf4j-version>
		<logback-version>1.0.11</logback-version>
		<junit-version>4.11</junit-version>
		<mockito-version>1.9.5</mockito-version>
	</properties>
	<dependencies>
		<!-- *** annotate dependencies *** -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!-- *** logging abstraction ***
		<dependency>
			<groupId>se.repos</groupId>
			<artifactId>lgr</artifactId>
			<version>${lgr-version}</version>
			<scope>compile</scope>
		</dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- *** unit tests *** -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<extensions>
			<extension>
    			<groupId>org.kuali.maven.wagons</groupId>
  				 <artifactId>maven-s3-wagon</artifactId>
   				<version>1.2.1</version>
  			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<!-- Build tagging for official builds, i.e. Jenkins -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<!-- Executable components must copy this to assembly plugin config and add mainClass -->
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Repos-Component-Id>${project.artifactId}</Repos-Component-Id>
								<Repos-Build-Tag>${BUILD_TAG}</Repos-Build-Tag>
								<Repos-Build-Name>${JOB_NAME}</Repos-Build-Name>
								<Repos-Build-Revision>${SVN_REVISION}</Repos-Build-Revision>
								<Repos-Build-Number>${BUILD_NUMBER}</Repos-Build-Number>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>						
							<manifestEntries>
								<Repos-Component-Id>${project.artifactId}</Repos-Component-Id>
								<Repos-Build-Tag>${BUILD_TAG}</Repos-Build-Tag>
								<Repos-Build-Name>${JOB_NAME}</Repos-Build-Name>
								<Repos-Build-Revision>${SVN_REVISION}</Repos-Build-Revision>
								<Repos-Build-Number>${BUILD_NUMBER}</Repos-Build-Number>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- config that does not work from pluginManagement in Maven 2 -->
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<tags>
						<!-- recognize @todo tag in types, constructors and methods, -->
						<tag>
							<name>todo</name>
							<placement>tcm</placement>
							<head>ToDo:</head>
						</tag>
					</tags>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://stackoverflow.com/questions/4725668/maven-how-to-deploy-snapshot-with-sources-and-javadoc -->
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.10.b1</version>
				<configuration>
					<header>src/license-header.txt</header>
					<strictCheck>true</strictCheck>
					<useDefaultExcludes>true</useDefaultExcludes>
					<excludes>
                    	<exclude>**/*.txt</exclude>
                    	<exclude>LICENSE</exclude>
                	</excludes>
					<properties>
						<year>${project.inceptionYear}</year>
						<owner>${project.organization.name}</owner>
					</properties>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.14</version>
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<!-- disabling checkstyle until we have a way of disabling the "tabs" rule for all projects wihout using external files
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.7</version>
			</plugin> -->
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>UTF-8</sourceEncoding>
					<targetJdk>1.6</targetJdk>
				</configuration>				
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>maven-3</id>
			<activation>
				<file>
					<exists>${basedir}</exists><!-- expression only recognized by Maven 3.x (see MNG-2363) -->
				</file>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>3.0</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
